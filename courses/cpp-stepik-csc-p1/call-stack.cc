// Напишите рекурсивную функцию вычисления наибольшего общего делителя двух положительных 
// целых чисел (Greatest Common Divisor, GCD). Для этого воспользуйтесь следующими свойствами:
//
// GCD(a,b)=GCD(b,amodb) 
// GCD(0,a)=a 
// GCD(a,b)=GCD(b,a) 
//
// Требования к реализации: в данном задании запрещено пользоваться циклами. Вы можете 
// заводить любые вспомогательные функции, если они вам нужны. Функцию main определять не нужно.

unsigned gcd(unsigned a, unsigned b) { 
    return b == 0 ? a : gcd(b, a % b); 
}


// Вам требуется написать программу, которая "переворачивает" последовательность
// положительных целых чисел. На вход подается последовательность разделенных 
// пробелами положительных целых чисел. Последовательность заканчивается нулем.
// Требуется вывести эту последовательность в обратном порядке.
//
// На выводе числа нужно так же разделить пробелами. Завершающий ноль — это просто
// индикатор конца последовательности, он не является ее частью, т.е. выводить его не нужно.
//
// Требования к реализации: в данном задании запрещено использовать циклы, а также 
// дополнительную память: массивы, строки или контейнеры (даже, если вы с ними уже знакомы).
// Вам разрешено заводить вспомогательные функции, если они вам нужны.

// Подсказка: используйте рекурсию.
#include <iostream>

using std::cout;
using std::cin;

void reverse(){
    int a;
    cin >> a;
    if(a == 0) return;
    reverse();
    cout << a << " ";
}

int main(){
    reverse();
    return 0;
}
