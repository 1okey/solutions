#include <iostream>
#include <string>
#include <vector>
#include <map>

// В этой задаче вам нужно присваивать номера автобусным маршрутам.
//
// А именно, для каждого маршрута, заданного набором названий остановок, нужно либо выдать новый
// номер (первому маршруту — 1, второму — 2 и т. д.), либо вернуть номер существующего маршрута,
// которому соответствует такой набор остановок.
//
// Наборы остановок, полученные друг из друга перестановкой остановок, считаются различными
// (см. пример).
//
// Указание
// В C++ ключом словаря может быть не только число или строка, но и другой контейнер,
// например, vector.
//
// Формат ввода
// Сначала вводится количество запросов Q, затем Q описаний запросов.
//
// Каждый запрос представляет собой положительное количество остановок N, за которым следуют
// разделённые пробелом N различных названий остановок соответствующего маршрута. Названия
// остановок состоят лишь из латинских букв и символов подчёркивания.
//
// Формат вывода
// Выведите ответ на каждый запрос в отдельной строке.
//
// Если маршрут с данным набором остановок уже существует, в ответ на соответствующий запрос
// выведите Already exists for i, где i — номер маршрута с таким набором остановок.
// В противном случае нужно выделить введённому набору остановок новый номер i и вывести
// его в формате New bus i.

using std::cin;
using std::cout;
using std::string;
using std::vector;
using std::map;
using std::endl;

int main() {
  size_t q, n;
  cin >> q;
  map<vector<string>,size_t> bus_stops_dict;
  for(; q > 0; q--){
    cin >> n;
    vector<string> bus_stops(n);
    for (string& stop : bus_stops) {
      cin >> stop;
    }
    if(bus_stops_dict.count(bus_stops) == 0){
      size_t new_bus =  bus_stops_dict.size() + 1;
      bus_stops_dict[bus_stops] = new_bus;
      cout << "New bus " << bus_stops_dict.size() << endl;
    } else {
      cout << "Already exists for " << bus_stops_dict[bus_stops] << endl;
    }
  }
  return 0;
}


